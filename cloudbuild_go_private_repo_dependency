# Based on https://cloud.google.com/cloud-build/docs/access-private-github-repos
# and assumes you have id_rsa.enc as described.
#
# In your Dockerfile you need two lines to copy over the .ssh dir (see below)
# and to tell git to use SSH:
#
# COPY ./root/.ssh /root/.ssh
# RUN git config --global url.git@github.com:.insteadOf https://github.com/



steps:
- name: 'gcr.io/cloud-builders/gcloud'
  args:
  - kms
  - decrypt
  - --ciphertext-file=id_rsa.enc
  - --plaintext-file=/root/.ssh/id_rsa
  - --location=global
  - --keyring=YOURKEYRING
  - --key=YOURKEY
  volumes:
  - name: 'ssh'
    path: /root/.ssh

# Set up git with key and domain.
- name: 'gcr.io/cloud-builders/git'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    chmod 600 /root/.ssh/id_rsa
    cat <<EOF >/root/.ssh/config
    Hostname github.com
    IdentityFile /root/.ssh/id_rsa
    EOF
    mv known_hosts /root/.ssh/known_hosts
  volumes:
  - name: 'ssh'
    path: /root/.ssh
- name: gcr.io/cloud-builders/docker
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    mkdir root
    # Here we copy the out-of-context .ssh dir into the local dir so that
    # build container can COPY it to /root/.ssh with
    # COPY ./root/.ssh /root/.ssh
    cp -r /root/.ssh root/.ssh
    docker build -t eu.gcr.io/$PROJECT_ID/YOURNAME:$SHORT_SHA . 
  volumes:
  - name: 'ssh'
    path: /root/.ssh
- name: gcr.io/cloud-builders/docker
  args: ['push', 'eu.gcr.io/$PROJECT_ID/YOURNAME:$SHORT_SHA']
